"""initial

Revision ID: f3897e90455a
Revises: 
Create Date: 2023-12-18 14:20:15.750917

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f3897e90455a"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "players",
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("position", sa.String(), nullable=False),
        sa.Column("height", sa.Integer(), nullable=False),
        sa.Column("weight", sa.Integer(), nullable=False),
        sa.Column("birth_date", sa.Date(), nullable=True),
        sa.Column("college", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("player_id"),
    )
    op.create_table(
        "teams",
        sa.Column("team_id", sa.Integer(), nullable=False),
        sa.Column("abbreviation", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("team_id"),
    )
    op.create_table(
        "games",
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column("home_team_id", sa.Integer(), nullable=False),
        sa.Column("away_team_id", sa.Integer(), nullable=False),
        sa.Column("kickoff_time", sa.Date(), nullable=False),
        sa.Column("home_score", sa.Integer(), nullable=False),
        sa.Column("away_score", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["away_team_id"],
            ["teams.team_id"],
        ),
        sa.ForeignKeyConstraint(
            ["home_team_id"],
            ["teams.team_id"],
        ),
        sa.PrimaryKeyConstraint("game_id"),
    )
    op.create_table(
        "plays",
        sa.Column("play_id", sa.Integer(), nullable=False),
        sa.Column("ingame_play_id", sa.Integer(), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("ball_carrier_id", sa.Integer(), nullable=False),
        sa.Column("quarter", sa.Integer(), nullable=False),
        sa.Column("game_time", sa.Integer(), nullable=False),
        sa.Column("down", sa.Integer(), nullable=False),
        sa.Column("offensive_team_id", sa.Integer(), nullable=False),
        sa.Column("los", sa.Integer(), nullable=False),
        sa.Column("los_team_id", sa.Integer(), nullable=True),
        sa.Column("yard_line", sa.Integer(), nullable=False),
        sa.Column("yards_to_go", sa.Integer(), nullable=False),
        sa.Column("offensive_formation", sa.String(), nullable=False),
        sa.Column("defenders_in_box", sa.Integer(), nullable=True),
        sa.Column("play_result", sa.Integer(), nullable=False),
        sa.Column("pre_penalty_play_result", sa.Integer(), nullable=False),
        sa.Column("pass_result", sa.String(), nullable=True),
        sa.Column("pass_length", sa.Integer(), nullable=True),
        sa.Column("home_score", sa.Integer(), nullable=False),
        sa.Column("away_score", sa.Integer(), nullable=False),
        sa.Column("penalty_yards", sa.Integer(), nullable=True),
        sa.Column("nullified_by_penalty", sa.Boolean(), nullable=False),
        sa.Column("pass_probability", sa.Float(), nullable=True),
        sa.Column("home_win_probability", sa.Float(), nullable=False),
        sa.Column("away_win_probability", sa.Float(), nullable=False),
        sa.Column("home_win_probability_added", sa.Float(), nullable=False),
        sa.Column("away_win_probability_added", sa.Float(), nullable=False),
        sa.Column("expected_points", sa.Float(), nullable=False),
        sa.Column("expected_points_added", sa.Float(), nullable=True),
        sa.Column("foul_1", sa.String(), nullable=True),
        sa.Column("foul_2", sa.String(), nullable=True),
        sa.Column("foul_player_id_1", sa.Integer(), nullable=True),
        sa.Column("foul_player_id_2", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ball_carrier_id"],
            ["players.player_id"],
        ),
        sa.ForeignKeyConstraint(
            ["foul_player_id_1"],
            ["players.player_id"],
        ),
        sa.ForeignKeyConstraint(
            ["foul_player_id_2"],
            ["players.player_id"],
        ),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.game_id"],
        ),
        sa.ForeignKeyConstraint(
            ["los_team_id"],
            ["teams.team_id"],
        ),
        sa.ForeignKeyConstraint(
            ["offensive_team_id"],
            ["teams.team_id"],
        ),
        sa.PrimaryKeyConstraint("play_id"),
    )
    op.create_table(
        "tackles",
        sa.Column("tackle_id", sa.Integer(), nullable=False),
        sa.Column("play_id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("tackled", sa.Boolean(), nullable=False),
        sa.Column("assist", sa.Boolean(), nullable=False),
        sa.Column("forced_fumble", sa.Boolean(), nullable=False),
        sa.Column("missed", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["play_id"],
            ["plays.play_id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players.player_id"],
        ),
        sa.PrimaryKeyConstraint("tackle_id"),
    )
    op.create_table(
        "tracking",
        sa.Column("tracking_id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=True),
        sa.Column("play_id", sa.Integer(), nullable=False),
        sa.Column("frame", sa.Integer(), nullable=False),
        sa.Column("x", sa.Float(), nullable=False),
        sa.Column("y", sa.Float(), nullable=False),
        sa.Column("speed", sa.Float(), nullable=False),
        sa.Column("acceleration", sa.Float(), nullable=False),
        sa.Column("direction", sa.Float(), nullable=True),
        sa.Column("orientation", sa.Float(), nullable=True),
        sa.Column("distance_traveled", sa.Float(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("jersey", sa.String(), nullable=True),
        sa.Column("event", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["play_id"],
            ["plays.play_id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players.player_id"],
        ),
        sa.PrimaryKeyConstraint("tracking_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("tracking")
    op.drop_table("tackles")
    op.drop_table("plays")
    op.drop_table("games")
    op.drop_table("teams")
    op.drop_table("players")
    # ### end Alembic commands ###
